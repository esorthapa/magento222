<?php
/**
 * Created by PhpStorm.
 * User: ishwar
 * Date: 11/23/17
 * Time: 3:17 PM
 */

namespace Javra\Javraevents\Model\ResourceModel\Post;

use Javra\Javraevents\Api\Data\PostInterface;
use Javra\Javraevents\Model\ResourceModel\AbstractCollection;
//use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;

class Collection extends AbstractCollection
{

    protected $_idFieldName ='post_id';
    protected $previewFlag;

    protected function _construct()
    {
        $this->_init('Javra\Javraevents\Model\Post', 'Javra\Javraevents\Model\ResourceModel\Post');
//        parent::_construct(); // TODO: Change the autogenerated stub
        $this->_map['fields']['store'] = 'store_table.store_id';
        $this->_map['fields']['post_id'] = 'main_table.post_id';
    }

    /**
     * Add filter by store
     *
     * @param $store
     * @param bool $withAdmin
     * @return mixed
     */
    public function addStoreFilter($store, $withAdmin = true)
    {
        if (!$this->getFlag('store_filter_added')) {
            $this->performAddStoreFilter($store, $withAdmin);
        }
        return $this;
    }
    /**
     * Set first store flag
     *
     * @param bool $flag
     * @return $this
     */
    public function setFirstStoreFlag($flag = false)
    {
        $this->previewFlag = $flag;
        return $this;
    }
    /**
     * Perform operations after collection load
     *
     * @return $this
     */
    protected function _afterLoad()
    {
        $entityMetadata = $this->metadataPool->getMetadata(\Javra\Javraevents\Api\Data\PostInterface::class);
        $this->performAfterLoad('javra_events_store', $entityMetadata->getLinkField());
        $this->previewFlag = false;

        return parent::_afterLoad();
    }
    /**
     * Perform operations before rendering filters
     *
     * @return void
     */
    protected function _renderFiltersBefore()
    {

        $entityMetadata = $this->metadataPool->getMetadata(\Javra\Javraevents\Api\Data\PostInterface::class);
        $this->joinStoreRelationTable('javra_events_store', $entityMetadata->getLinkField());
    }
}