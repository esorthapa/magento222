<?php
/**
 * Created by PhpStorm.
 * User: ishwar
 * Date: 11/23/17
 * Time: 3:16 PM
 */

namespace Javra\Javraevents\Model;

use Javra\Javraevents\Api\Data\PostInterface;
use Magento\Framework\DataObject\IdentityInterface;
use Magento\Framework\Model\AbstractModel;
use  \Magento\Framework\Model\Context;
use \Magento\Framework\Registry;
use \Magento\Framework\UrlInterface;
use  \Magento\Framework\Model\ResourceModel\AbstractResource;
use \Magento\Framework\Data\Collection\AbstractDb;

class Post extends AbstractModel implements PostInterface, IdentityInterface
{

    const STATUS_ENABLED='1';
    const STATUS_DISABLED='0';

    const CACHE_TAG='blog_post';

    protected $_cacheTag='blog_post';

    protected $_eventPrefix='blog_post';

    protected function _construct()
    {
        $this->_init('Javra\Javraevents\Model\ResourceModel\Post');
//        parent::_construct(); // TODO: Change the autogenerated stub
    }

    function __construct(
        Context $context,
        Registry $registry,
        UrlInterface $urlBuilder,
        AbstractResource $resource = null,
        AbstractDb $resourceCollection = null,
        array $data = [])
    {
        $this->_urlBuilder = $urlBuilder;
        parent::__construct($context, $registry, $resource, $resourceCollection, $data);
    }


    public function checkUrlKey($url_key)
    {
        return $this->_getResource()->checkUrlKey($url_key);
    }

    public function getAvailableStatuses()
    {
        return [self::STATUS_ENABLED=>__('Enable'), self::STATUS_DISABLED=>__('Disable')];
    }
    public function getAvailableTypes()
    {
        return [self::STATUS_ENABLED=>__('News'), self::STATUS_DISABLED=>__('Events')];
    }


    public function getIdentities()
    {
        return [self::CACHE_TAG. '_'. $this->getId()];
    }

    public function getId()
    {
        return $this->getData(self::POST_ID);
    }

    public function getUrlKey()
    {
        return $this->getData(self::URL_KEY);
    }

    public function getTitle()
    {
        return $this->getData(self::TITLE);
    }

    public function getContent()
    {
        return $this->getData(self::CONTENT);
    }

    public function getImage()
    {
        return $this->getData(self::IMAGE);
    }

    public function getCreatedBy()
    {
        return $this->getData(self::CREATED_BY);
    }

    public function getLocation()
    {
        return $this->getData(self::LOCATION);
    }

    public function getCountry()
    {
     return $this->getData(self::COUNTRY);
    }

    public function getCity()
    {
        return $this->getData(self::CITY);
    }

    public function getShortDescription()
    {
        return $this->getData(self::SHORT_DESCRIPTION);
    }

    public function getType()
    {
        return $this->getData(self::TYPE);
    }

    public function getStartDate()
    {
        return $this->getData(self::START_DATE);
    }

    public function getEndDate()
    {
        return $this->getData(self::END_DATE);
    }

    public function getCreationTime()
    {
        return $this->getData(self::CREATION_TIME);
    }

    public function getUpdateTime()
    {
        return $this->getData(self::UPDATE_TIME);
    }

    public function isActive()
    {
        return $this->getData(self::IS_ACTIVE);
    }


    public function setId($id)
    {
        return $this->setData(self::POST_ID, $id);
    }

    public function setUrlKey($url_key)
    {
        return $this->setData(self::URL_KEY, $url_key);
    }

    public function setTitle($title)
    {
        return $this->setData(self::TITLE, $title);
    }

    public function setContent($content)
    {
        return $this->setData(self::CONTENT, $content);
    }

    public function setImage($image)
    {
        return $this->setData(self::IMAGE, $image);
    }

    public function setCreatedBy($created_by)
    {
        return $this->setData(self::CREATED_BY, $created_by);
    }

    public function setLocation($location)
    {
        return $this->setData(self::LOCATION, $location);
    }

    public function setCountry($country)
    {
        return $this->setData(self::COUNTRY, $country);
    }

    public function setCity($city)
    {
        return $this->setData(self::CITY, $city);
    }

    public function setShortDescription($short_description)
    {
        return $this->setData(self::SHORT_DESCRIPTION, $short_description);
    }

    public function setType($type)
    {
        return $this->setData(self::TYPE, $type);
    }

    public function setCreationTime($creation_time)
    {
        return $this->setData(self::CREATION_TIME, $creation_time);
    }

    public function setUpdateTime($update_time)
    {
        return $this->setData(self::UPDATE_TIME, $update_time);
    }

    public function setStartDate($start_date)
    {
        return $this->setData(self::START_DATE, $start_date);
    }

    public function setEndDate($end_date)
    {
        return $this->setData(self::END_DATE, $end_date);
    }

    public function setisActive($is_active)
    {
        return $this->setData(self::IS_ACTIVE, $is_active);
    }

    /**
     * Receive page store ids
     *
     * @return int[]
     */
    public function getStores()
    {
        return $this->hasData('stores') ? $this->getData('stores') : (array)$this->getData('store_id');
    }
}